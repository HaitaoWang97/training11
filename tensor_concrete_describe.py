# -*- coding: utf-8 -*-
"""Tensor_concrete describe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19EuIU674pHSFquLTYwdCO-0kXSZMWpSs
"""

from __future__ import print_function
import torch as t
a = t.Tensor(2, 3)
a

# 用list的数据创建tensor
b = t.Tensor([[1,2,3],[4,5,6]])
b

b.tolist() #把tensor转换为list

#tensor.size()返回torch.Size对象，它是tuple的子类
b_size = b.size()
b_size

#创建和某个tensor一样形状的tensor
c = t.Tensor(b_size)
c
#注意用t.tensor(*size)的方式创建tensor时，系统不会直接分配空间，只会计算空间是否够用，使用到tensor才会分配

#常用tensor操作,view不会改变自身数据，会返回新的tensor与原来的tensor共享内存
a = t.arange(0, 6)
a.view(2, 3)

b = a.view(-1, 3)
b

a[1] = 100
b

#添加一个维度squeeze,减小一个维度unsqueeze
b.unsqueeze(1)

#等效
b.unsqueeze(-2)

c = b.view(1, 1 , 1, 2, 3)
c.squeeze(0)

#resize是另一种调整size的方法，可以修改tensor的尺寸，如果新尺寸小于原size，之前的旧数据保留部分，如果超过则会自动分配新的空间
b.resize_(1, 3)

b.resize_(3, 3)